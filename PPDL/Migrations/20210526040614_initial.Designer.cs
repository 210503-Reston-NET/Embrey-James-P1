// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PPDL.Entities;

namespace PPDL.Migrations
{
    [DbContext(typeof(PPDBContext))]
    [Migration("20210526040614_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PPDL.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customerID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerLocale")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("customerLocale");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("customerName");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("PPDL.Entities.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("inventoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InventoryCode")
                        .HasColumnType("int")
                        .HasColumnName("inventoryCode");

                    b.Property<int>("InventoryNumber")
                        .HasColumnType("int")
                        .HasColumnName("inventoryNumber");

                    b.Property<int>("InventoryQuantity")
                        .HasColumnType("int")
                        .HasColumnName("inventoryQuantity");

                    b.HasKey("InventoryId");

                    b.HasIndex("InventoryCode");

                    b.HasIndex("InventoryNumber");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("PPDL.Entities.LineItem", b =>
                {
                    b.Property<int>("LineItemId")
                        .HasColumnType("int")
                        .HasColumnName("lineItemID");

                    b.Property<int>("LineOrderId")
                        .HasColumnType("int")
                        .HasColumnName("lineOrderID");

                    b.Property<int>("LineProductId")
                        .HasColumnType("int")
                        .HasColumnName("lineProductID");

                    b.Property<int>("LineQuantityId")
                        .HasColumnType("int")
                        .HasColumnName("lineQuantityID");

                    b.HasKey("LineItemId");

                    b.HasIndex("LineOrderId");

                    b.HasIndex("LineProductId");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("PPDL.Entities.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("locationID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationCity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("locationCity");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("locationName");

                    b.Property<string>("LocationState")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("locationState");

                    b.HasKey("LocationId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("PPDL.Entities.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("managerID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("managerName");

                    b.HasKey("ManagerId");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("PPDL.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderID");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime")
                        .HasColumnName("orderDate");

                    b.Property<string>("OrderLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("orderLocation");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("orderNumber");

                    b.Property<int>("OrderQuantity")
                        .HasColumnType("int")
                        .HasColumnName("orderQuantity");

                    b.Property<double>("OrderTotal")
                        .HasColumnType("float")
                        .HasColumnName("orderTotal");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderNumber");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PPDL.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("productID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("productName");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float")
                        .HasColumnName("productPrice");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PPDL.Entities.Inventory", b =>
                {
                    b.HasOne("PPDL.Entities.Location", "InventoryCodeNavigation")
                        .WithMany("Inventories")
                        .HasForeignKey("InventoryCode")
                        .HasConstraintName("FK__Inventory__inven__420DC656")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPDL.Entities.Product", "InventoryNumberNavigation")
                        .WithMany("Inventories")
                        .HasForeignKey("InventoryNumber")
                        .HasConstraintName("FK__Inventory__inven__4119A21D")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryCodeNavigation");

                    b.Navigation("InventoryNumberNavigation");
                });

            modelBuilder.Entity("PPDL.Entities.LineItem", b =>
                {
                    b.HasOne("PPDL.Entities.Order", "LineOrder")
                        .WithMany("LineItems")
                        .HasForeignKey("LineOrderId")
                        .HasConstraintName("FK__LineItems__lineO__3E3D3572")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPDL.Entities.Product", "LineProduct")
                        .WithMany("LineItems")
                        .HasForeignKey("LineProductId")
                        .HasConstraintName("FK__LineItems__lineP__3D491139")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LineOrder");

                    b.Navigation("LineProduct");
                });

            modelBuilder.Entity("PPDL.Entities.Order", b =>
                {
                    b.HasOne("PPDL.Entities.Customer", "OrderNumberNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("OrderNumber")
                        .HasConstraintName("FK__Orders__orderNum__3A6CA48E")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderNumberNavigation");
                });

            modelBuilder.Entity("PPDL.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PPDL.Entities.Location", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("PPDL.Entities.Order", b =>
                {
                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("PPDL.Entities.Product", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("LineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
